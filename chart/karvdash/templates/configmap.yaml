apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
data:
  docker_registry_cert_file: |
    {{- if .Values.karvdash.dockerRegistryCert }}
    {{- .Values.karvdash.dockerRegistryCert | nindent 4 }}
    {{- end }}
  disabled_service_templates: |
    {{- range $val := .Values.karvdash.disabledServiceTemplates }}
    {{ $val }}
    {{- end }}
  disabled_dataset_templates: |
    {{- range $val := .Values.karvdash.disabledDatasetTemplates }}
    {{ $val }}
    {{- end }}
  service_url_prefixes: |
    {{- range $val := .Values.karvdash.serviceURLPrefixes }}
    {{ $val }}
    {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-proxy
  labels:
    app: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
data:
  default.conf: |
    log_format custom '$http_x_forwarded_for - $sent_http_x_log_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$http_user_agent"';

    server {
        listen 80;
        server_name {{ .Release.Name }}.{{ .Release.Namespace }}.svc;
        client_max_body_size 10m;

        access_log /var/log/nginx/access.log custom;

        location / {
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;

            proxy_pass          http://127.0.0.1:8000;
            proxy_read_timeout  30;

            proxy_redirect      http://127.0.0.1:8000 http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-webhook
  labels:
    app: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
data:
  default.conf: |
    log_format custom '$remote_addr - $sent_http_x_log_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$http_user_agent"';

    server {
        listen 443 ssl;
        server_name {{ .Release.Name }}.{{ .Release.Namespace }}.svc;

        access_log /var/log/nginx/access.log custom;

        ssl_certificate         /etc/ssl/keys/tls.crt;
        ssl_certificate_key     /etc/ssl/keys/tls.key;

        ssl_session_cache       builtin:1000 shared:SSL:10m;
        ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers             HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;

            proxy_pass          http://127.0.0.1:8000;
            proxy_read_timeout  30;

            proxy_redirect      http://127.0.0.1:8000 https://{{ .Release.Name }}.{{ .Release.Namespace }}.svc;
        }
    }
