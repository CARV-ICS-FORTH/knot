{{- $ingressURL := (required "You must set karvdash.ingressURL to the ingress URL used" .Values.karvdash.ingressURL) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - image: nginx:1.19.6-alpine
        name: proxy
        env:
        - name: NGINX_ENTRYPOINT_QUIET_LOGS
          value: "1"
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: {{ .Release.Name }}-proxy-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        {{- if or .Values.karvdash.logsVolumeClaim .Values.karvdash.logsHostPath }}
        - name: {{ .Release.Name }}-logs-volume
          mountPath: /var/log/nginx
          subPath: proxy
        {{- end }}
      - image: nginx:1.19.6-alpine
        name: webhook
        env:
        - name: NGINX_ENTRYPOINT_QUIET_LOGS
          value: "1"
        ports:
        - containerPort: 443
          name: https
        volumeMounts:
        - name: {{ .Release.Name }}-webhook-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: {{ .Release.Name }}-webhook-secret
          mountPath: /etc/ssl/keys
          readOnly: true
        {{- if or .Values.karvdash.logsVolumeClaim .Values.karvdash.logsHostPath }}
        - name: {{ .Release.Name }}-logs-volume
          mountPath: /var/log/nginx
          subPath: webhook
        {{- end }}
      - image: {{- if .Values.image }} {{ .Values.image }} {{- else }} carvicsforth/karvdash:v{{ .Chart.Version }} {{- end }}
        name: karvdash
        env:
        - name: DJANGO_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: django-secret
        - name: DJANGO_DEBUG
          value: {{ .Values.karvdash.djangoDebug | quote }}
        - name: KARVDASH_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: admin-password
        - name: KARVDASH_VOUCH_URL
          value: {{ printf "%s://vouch.%s" ($ingressURL | urlParse).scheme (split ":" ($ingressURL | urlParse).host)._0 | quote }}
        - name: KARVDASH_VOUCH_SECRET
          value: {{ .Release.Name }}-vouch
        - name: KARVDASH_HTPASSWD_EXPORT_DIR
          value: {{ .Values.karvdash.htpasswdExportDir | quote }}
        - name: KARVDASH_DASHBOARD_TITLE
          value: {{ .Values.karvdash.dashboardTitle | quote }}
        - name: KARVDASH_DASHBOARD_THEME
          value: {{ .Values.karvdash.dashboardTheme | quote }}
        - name: KARVDASH_ISSUES_URL
          value: {{ .Values.karvdash.issuesURL | quote }}
        - name: KARVDASH_INGRESS_URL
          value: {{ $ingressURL | quote }}
        - name: KARVDASH_DOCKER_REGISTRY_URL
          value: {{ .Values.karvdash.dockerRegistryURL | quote }}
        {{- if .Values.karvdash.dockerRegistryCert }}
        - name: KARVDASH_DOCKER_REGISTRY_CERT_FILE
          value: /etc/karvdash/docker_registry_cert_file
        {{- end }}
        - name: KARVDASH_DATASETS_AVAILABLE
          value: {{ .Values.karvdash.datasetsAvailable | quote }}
        - name: KARVDASH_SERVICE_DOMAIN
          value: {{ printf "%s.%s.svc" .Release.Name .Release.Namespace | quote }}
        - name: KARVDASH_FILES_URL
          value: {{ .Values.karvdash.filesURL | quote }}
        - name: KARVDASH_ALLOWED_HOSTPATH_DIRS
          value: {{ .Values.karvdash.allowedHostPathDirs | quote }}
        {{- if .Values.karvdash.disabledServiceTemplates }}
        - name: KARVDASH_DISABLED_SERVICE_TEMPLATES_FILE
          value: /etc/karvdash/disabled_service_templates
        {{- end }}
        {{- if .Values.karvdash.disabledDatasetTemplates }}
        - name: KARVDASH_DISABLED_DATASET_TEMPLATES_FILE
          value: /etc/karvdash/disabled_dataset_templates
        {{- end }}
        {{- if .Values.karvdash.serviceURLPrefixes }}
        - name: KARVDASH_SERVICE_URL_PREFIXES_FILE
          value: /etc/karvdash/service_url_prefixes
        {{- end }}
        - name: KARVDASH_ARGO_URL
          value: {{ .Values.karvdash.argoURL | quote }}
        - name: KARVDASH_ARGO_NAMESPACE
          value: {{ .Values.karvdash.argoNamespace | quote }}
        ports:
        - containerPort: 8000
          name: http
        volumeMounts:
        {{- if .Values.karvdash.dockerRegistryCert }}
        - name: {{ .Release.Name }}-config
          mountPath: /etc/karvdash/docker_registry_cert_file
          subPath: docker_registry_cert_file
        {{- end }}
        {{- if .Values.karvdash.disabledServiceTemplates }}
        - name: {{ .Release.Name }}-config
          mountPath: /etc/karvdash/disabled_service_templates
          subPath: disabled_service_templates
        {{- end }}
        {{- if .Values.karvdash.disabledDatasetTemplates }}
        - name: {{ .Release.Name }}-config
          mountPath: /etc/karvdash/disabled_dataset_templates
          subPath: disabled_dataset_templates
        {{- end }}
        {{- if .Values.karvdash.serviceURLPrefixes }}
        - name: {{ .Release.Name }}-config
          mountPath: /etc/karvdash/service_url_prefixes
          subPath: service_url_prefixes
        {{- end }}
        - name: {{ .Release.Name }}-state-volume
          mountPath: /db
        - name: {{ .Release.Name }}-files-volume
          mountPath: /files
      - image: voucher/vouch-proxy:0.27.1
        name: vouch-proxy
        env:
        - name: VOUCH_ALLOWALLUSERS
          value: "true"
        - name: VOUCH_COOKIE_DOMAIN
          value: {{ (split ":" ($ingressURL | urlParse).host)._0 }}
        - name: VOUCH_COOKIE_SECURE
          value: "false"
        - name: OAUTH_PROVIDER
          value: oidc
        - name: OAUTH_AUTH_URL
          value: {{ $ingressURL }}/oauth/authorize/
        - name: OAUTH_TOKEN_URL
          value: http://127.0.0.1:8000/oauth/token/
        - name: OAUTH_USER_INFO_URL
          value: http://127.0.0.1:8000/oauth/userinfo/
        - name: OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-vouch
              key: oauth-client-id
        - name: OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-vouch
              key: oauth-client-secret
        - name: OAUTH_CALLBACK_URL
          value: {{ printf "%s://vouch.%s/auth" ($ingressURL | urlParse).scheme (split ":" ($ingressURL | urlParse).host)._0 | quote }}
        ports:
        - containerPort: 9090
          name: vouch-proxy
      volumes:
      - name: {{ .Release.Name }}-config
        configMap:
          name: {{ .Release.Name }}
          defaultMode: 0644
      - name: {{ .Release.Name }}-proxy-config
        configMap:
          name: {{ .Release.Name }}-proxy
          defaultMode: 0644
      - name: {{ .Release.Name }}-webhook-secret
        secret:
          secretName: {{ .Release.Name }}-webhook
      - name: {{ .Release.Name }}-webhook-config
        configMap:
          name: {{ .Release.Name }}-webhook
          defaultMode: 0644
      {{- if .Values.karvdash.logsVolumeClaim }}
      - name: {{ .Release.Name }}-logs-volume
        persistentVolumeClaim:
          claimName: {{ .Values.karvdash.logsVolumeClaim }}
      {{- else if .Values.karvdash.logsHostPath }}
      - name: {{ .Release.Name }}-logs-volume
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-logs-pvc
      {{- end }}
      - name: {{ .Release.Name }}-state-volume
        persistentVolumeClaim:
          claimName: {{- if .Values.karvdash.stateVolumeClaim }} {{ .Values.karvdash.stateVolumeClaim }} {{- else }} {{ .Release.Name }}-state-pvc {{- end }}
      - name: {{ .Release.Name }}-files-volume
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-files-pvc
