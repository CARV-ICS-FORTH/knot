{{- $ingressURL := (required "You must set karvdash.ingressURL to the ingress URL used" .Values.karvdash.ingressURL) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - image: nginx:1.19.6-alpine
        name: proxy
        env:
        - name: NGINX_ENTRYPOINT_QUIET_LOGS
          value: "1"
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: {{ .Release.Name }}-proxy-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        {{- if or .Values.karvdash.logsVolumeClaim .Values.karvdash.logsHostPath }}
        - name: {{ .Release.Name }}-logs-volume
          mountPath: /var/log/nginx
          subPath: proxy
        {{- end }}
      - image: nginx:1.19.6-alpine
        name: webhook
        env:
        - name: NGINX_ENTRYPOINT_QUIET_LOGS
          value: "1"
        ports:
        - containerPort: 443
          name: https
        volumeMounts:
        - name: {{ .Release.Name }}-webhook-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: {{ .Release.Name }}-webhook-secret
          mountPath: /etc/ssl/keys
          readOnly: true
        {{- if or .Values.karvdash.logsVolumeClaim .Values.karvdash.logsHostPath }}
        - name: {{ .Release.Name }}-logs-volume
          mountPath: /var/log/nginx
          subPath: webhook
        {{- end }}
      - image: {{- if .Values.image }} {{ .Values.image }} {{- else }} carvicsforth/karvdash:v{{ .Chart.Version }} {{- end }}
        name: dashboard
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-secret
        - configMapRef:
            name: {{ .Release.Name }}-env
        env:
        {{- if .Values.karvdash.disabledServices }}
        - name: KARVDASH_DISABLED_SERVICES_FILE
          value: /etc/karvdash/disabled_services
        {{- end }}
        {{- if .Values.karvdash.disabledDatasets }}
        - name: KARVDASH_DISABLED_DATASETS_FILE
          value: /etc/karvdash/disabled_datasets
        {{- end }}
        {{- if .Values.karvdash.serviceURLPrefixes }}
        - name: KARVDASH_SERVICE_URL_PREFIXES_FILE
          value: /etc/karvdash/service_url_prefixes
        {{- end }}
        ports:
        - containerPort: 8000
          name: http
        volumeMounts:
        {{- if .Values.karvdash.disabledServices }}
        - name: {{ .Release.Name }}-files-config
          mountPath: /etc/karvdash/disabled_services
          subPath: disabled_services
        {{- end }}
        {{- if .Values.karvdash.disabledDatasets }}
        - name: {{ .Release.Name }}-files-config
          mountPath: /etc/karvdash/disabled_datasets
          subPath: disabled_datasets
        {{- end }}
        {{- if .Values.karvdash.serviceURLPrefixes }}
        - name: {{ .Release.Name }}-files-config
          mountPath: /etc/karvdash/service_url_prefixes
          subPath: service_url_prefixes
        {{- end }}
        {{- if or .Values.karvdash.themeVolumeClaim .Values.karvdash.themeHostPath }}
        - name: {{ .Release.Name }}-theme-volume
          mountPath: /app/dashboard/static/dashboard/theme
        {{- end }}
        - name: {{ .Release.Name }}-state-volume
          mountPath: /db
        - name: {{ .Release.Name }}-files-volume
          mountPath: /files
        {{- if and .Values.karvdash.certificateSecretName .Values.karvdash.certificateSecretKey }}
        - name: ssl-certificate-volume
          mountPath: /usr/local/share/ca-certificates/{{ (split ":" ($ingressURL | urlParse).host)._0 }}.crt
          subPath: {{ .Values.karvdash.certificateSecretKey }}
        {{- end }}
      {{- if not .Values.karvdash.developmentURL }}
      - image: {{- if .Values.image }} {{ .Values.image }} {{- else }} carvicsforth/karvdash:v{{ .Chart.Version }} {{- end }}
        name: worker
        command: ["./start.sh"]
        args: ["worker"]
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-secret
        - configMapRef:
            name: {{ .Release.Name }}-env
        volumeMounts:
        - name: {{ .Release.Name }}-state-volume
          mountPath: /db
        {{- if and .Values.karvdash.certificateSecretName .Values.karvdash.certificateSecretKey }}
        - name: ssl-certificate-volume
          mountPath: /usr/local/share/ca-certificates/{{ (split ":" ($ingressURL | urlParse).host)._0 }}.crt
          subPath: {{ .Values.karvdash.certificateSecretKey }}
        {{- end }}
      {{- end }}
      - image: voucher/vouch-proxy:0.27.1
        name: vouch-proxy
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-vouch-proxy
        env:
        - name: OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-oauth-vouch
              key: client-id
        - name: OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-oauth-vouch
              key: client-secret
        ports:
        - containerPort: 9090
          name: vouch-proxy
      - image: redis:6.2.6
        name: redis
        ports:
        - containerPort: 6379
          name: redis
      volumes:
      - name: {{ .Release.Name }}-files-config
        configMap:
          name: {{ .Release.Name }}-files
          defaultMode: 0644
      - name: {{ .Release.Name }}-proxy-config
        configMap:
          name: {{ .Release.Name }}-proxy
          defaultMode: 0644
      - name: {{ .Release.Name }}-webhook-secret
        secret:
          secretName: {{ .Release.Name }}-webhook
      - name: {{ .Release.Name }}-webhook-config
        configMap:
          name: {{ .Release.Name }}-webhook
          defaultMode: 0644
      {{- if .Values.karvdash.themeVolumeClaim }}
      - name: {{ .Release.Name }}-theme-volume
        persistentVolumeClaim:
          claimName: {{ .Values.karvdash.themeVolumeClaim }}
      {{- else if .Values.karvdash.themeHostPath }}
      - name: {{ .Release.Name }}-theme-volume
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-theme-pvc
      {{- end }}
      {{- if .Values.karvdash.logsVolumeClaim }}
      - name: {{ .Release.Name }}-logs-volume
        persistentVolumeClaim:
          claimName: {{ .Values.karvdash.logsVolumeClaim }}
      {{- else if .Values.karvdash.logsHostPath }}
      - name: {{ .Release.Name }}-logs-volume
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-logs-pvc
      {{- end }}
      - name: {{ .Release.Name }}-state-volume
        persistentVolumeClaim:
          claimName: {{- if .Values.karvdash.stateVolumeClaim }} {{ .Values.karvdash.stateVolumeClaim }} {{- else }} {{ .Release.Name }}-state-pvc {{- end }}
      - name: {{ .Release.Name }}-files-volume
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-files-pvc
      {{- if and .Values.karvdash.certificateSecretName .Values.karvdash.certificateSecretKey }}
      - name: ssl-certificate-volume
        secret:
          secretName: ssl-certificate
      {{- end }}
