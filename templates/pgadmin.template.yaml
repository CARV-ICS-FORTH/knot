# pgadmin.template.yaml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${NAME}
spec:
  rules:
  - host: ${HOSTNAME}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ${NAME}
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ${NAME}
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: ${NAME}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-config
data:
  config_system.py: |
    import os

    DATA_DIR = '${PRIVATE_DIR}/.pgadmin/'
    LOG_FILE = os.path.join(DATA_DIR, 'pgadmin4.log')
    SQLITE_PATH = os.path.join(DATA_DIR, 'pgadmin4.db')
    SESSION_DB_PATH = os.path.join(DATA_DIR, 'sessions')
    STORAGE_DIR = os.path.join(DATA_DIR, 'storage')
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${NAME}
  template:
    metadata:
      labels:
        app: ${NAME}
    spec:
      containers:
      - name: ${NAME}
        image: dpage/pgadmin4
        securityContext:
          runAsUser: 0
        ports:
        - containerPort: 80
        env:
        - name: PGADMIN_DEFAULT_EMAIL
          value: ${EMAIL}
        - name: PGADMIN_DEFAULT_PASSWORD
          value: ${PASSWORD}
        volumeMounts:
        - name: pgadmin-config-volume
          mountPath: /etc/pgadmin/config_system.py
          subPath: config_system.py
      volumes:
      - name: pgadmin-config-volume
        configMap:
          name: pgadmin-config
          defaultMode: 0644
---
kind: Template
name: pgAdmin
description: Admin for PostgreSQL database server
singleton: yes
datasets: no
variables:
- name: NAME
  default: pgadmin
- name: HOSTNAME
  default: pgadmin.example.com
- name: PRIVATE_DIR
  default: /private
- name: EMAIL
  default: user@domain.com
  help: PGAdmin email address to login
- name: PASSWORD
  default: SuperSecret
  help: PGAdmin password to login
