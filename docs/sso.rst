SSO configuration
=================

Karvdash implements an OAuth 2.0/OpenID Connect provider, which allows third-party services to request verification of users' identitities via standard protocols. Note that OIDC provides only authentication information and it is up to the connecting service to define what users are authorized to do, based on their identities (i.e., username, email, etc.).

Argo Workflows integration
--------------------------

`Argo Workflows <https://argoproj.github.io/workflows>`_ is a workflow management engine for Kubernetes. Karvdash integrates with Argo Workflows, so both can run side-by-side as top-level services in Kubernetes, while Karvdash provides SSO services to Argo Workflows and configures appropriate authorization directives, so each user will be allowed to access resources in the corresponding Karvdash-defined namespace.

Assuming both services run under the ``.example.com`` domain, you first need to start Karvdash with the appropriate options. Using the Helm chart, these would be::

    helm install karvdash karvdash/karvdash --namespace default \
        ...
        --set karvdash.argoURL="https://argo.example.com" \
        --set karvdash.argoNamespace="argo"

Then login to Karvdash as an administrator, to add Argo Workflows as a connected OIDC application. In ``https://example.com/admin/oauth2_provider/application/add/``, set the following values:

* *User*: Select the administrator.
* *Redirect uris*: Enter ``https://argo.example.com/oauth2/callback``.
* *Client type*: Select ``Confidential``.
* *Authorization grant type*: Select ``Authorization code``.
* *Name*: Enter ``argo``.
* *Skip authorization*: Check the box.
* *Algorithm*: Select ``RSA with SHA-2 256``.

Mark down the autogenerated *Client id* and *Client secret* and place them in a secret in the "argo" namespace::

    kubectl create namespace argo
    kubectl create secret generic argo-sso-secret -n argo --from-literal=client-id="<CLIENT_ID>" --from-literal=client-secret="<CLIENT_SECRET>"

To install Argo::

    helm repo add argo https://argoproj.github.io/argo-helm
    helm install argo argo/argo-workflows --version 0.2.12 --namespace argo \
        --set controller.image.tag=v3.1.1 \
        --set controller.containerRuntimeExecutor=k8sapi \
        --set executor.image.tag=v3.1.1 \
        --set server.image.tag=v3.1.1 \
        --set server.extraArgs\[0\]="--auth-mode=sso" \
        --set server.ingress.enabled=true \
        --set server.ingress.hosts\[0\]=argo.example.com \
        --set server.sso.issuer=http://example.com/oauth \
        --set server.sso.clientId.name=argo-sso-secret \
        --set server.sso.clientId.key=client-id \
        --set server.sso.clientSecret.name=argo-sso-secret \
        --set server.sso.clientSecret.key=client-secret \
        --set server.sso.redirectUrl=https://argo.example.com/oauth2/callback \
        --set server.sso.rbac.enabled=true
